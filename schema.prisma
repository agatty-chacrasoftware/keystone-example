// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id       String @id @default(cuid())
  name     String @default("")
  email    String @unique @default("")
  password String
  posts    Post[] @relation("Post_author")
}

model Post {
  id          String    @id @default(cuid())
  title       String    @default("")
  status      String?   @default("draft")
  content     Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  publishDate DateTime?
  author      User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId    String?   @map("author")
  tags        Tag[]     @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model Car {
  id                String    @id @default(cuid())
  model             String    @default("")
  brand             String    @default("")
  price             Int
  yearOfManufacture Int
  upgradeList       Upgrade[] @relation("Upgrade_cars")
}

model Upgrade {
  id          String  @id @default(cuid())
  upgardeYear Int
  cars        Car?    @relation("Upgrade_cars", fields: [carsId], references: [id])
  carsId      String? @map("cars")

  @@index([carsId])
}

model Student {
  id    String            @id @default(cuid())
  name  String            @default("") @map("studentName")
  class StudentClassType? @map("class")
  books Book[]            @relation("Book_assignToStudent")
}

model Book {
  id              String            @id @default(cuid())
  title           String            @default("") @map("bookTitle")
  category        BookCategoryType?
  assignToStudent Student[]         @relation("Book_assignToStudent")
}

model Customer {
  id          String    @id @default(cuid())
  Name        String    @default("") @map("name")
  Email       String    @unique @default("") @map("email")
  Address     String    @default("") @map("Address")
  Pincode     Int?
  PhoneNumber Int?
  Rooms       Booking[] @relation("Booking_Customer")
}

model Hotel {
  id      String @id @default(cuid())
  Name    String @default("") @map("hotelName")
  Branch  String @default("LA") @map("branchName")
  Country String @default("India") @map("country")
  Rooms   Room[] @relation("Room_HotelBranch")
}

model Room {
  id              String   @id @default(cuid())
  HotelBranch     Hotel?   @relation("Room_HotelBranch", fields: [HotelBranchId], references: [id])
  HotelBranchId   String?  @map("HotelBranch")
  RoomNo          Int?     @map("roomNo")
  RoomDescription String   @default("") @map("roomDescription")
  RoomPrice       Int?
  Booking         Booking? @relation("Booking_Room")

  @@index([HotelBranchId])
}

model Booking {
  id       String     @id @default(cuid())
  Customer Customer[] @relation("Booking_Customer")
  Room     Room?      @relation("Booking_Room", fields: [RoomId], references: [id])
  RoomId   String?    @unique @map("Room")
  checkIn  DateTime?
  checkOut DateTime?
}

enum StudentClassType {
  firstYear
  secondYear
}

enum BookCategoryType {
  ComputerScience
  Arts
  Business
  Accounts
}